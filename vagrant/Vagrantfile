# -*- mode: ruby -*-
# vi: set ft=ruby :

#
# Docker, kubernetes, java, mysql workstation configuration.
# 02-Aug-2017 Igor Azarny (iazarny@yahoo.com)
# 18-Jul-2019 Igor Azarny (iazarny@yahoo.com)


Vagrant.configure("2") do |config|
    #config.vm.box = "ubuntu/xenial64"
    config.vm.box = "ubuntu/trusty64"

    config.vm.hostname = "MSStarter-2"
    config.vm.boot_timeout = 120
    config.ssh.insert_key = false
    # in case of problems during provision (vagrant cannot login to vm box) uncomment 2 lines below
    #config.ssh.username = "vagrant"
    #config.ssh.password = "vagrant"

    config.vm.network :private_network, type: "dhcp"
    config.vm.network "forwarded_port", guest: 8080, host: 8080
    config.vm.network "forwarded_port", guest: 22222, host: 22222
    config.vm.network "forwarded_port", guest: 80, host: 80
    config.vm.network "forwarded_port", guest: 22, host: 22

    config.vm.synced_folder "../../", "/project"

    config.vm.provider :libvirt do |libvirt|
        libvirt.uri = 'qemu+unix:///system'
        libvirt.memory = 6144
        libvirt.cpus = 2
	    libvirt.cpu_feature :name => 'x2apic', :policy => 'disable'
        libvirt.graphics_type = "spice"
        libvirt.video_type = "qxl"
    end


    config.vm.provider "virtualbox" do |vb|
        vb.name = "MSStarter-2"
        vb.gui = true
        vb.memory = "6144"
        vb.cpus = 2
    end

    config.vm.provision :shell, inline: "mkdir -p /home/vagrant/.m2 && chown vagrant:vagrant /home/vagrant/.m2"
    config.vm.provision "shell", inline: <<-SHELL
        apt-get update
#tools
        apt-get install -y git
        apt-get install -y wget
        apt-get install -y curl
        apt-get install -y net-tools
        apt-get install -y mc
        apt-get install -y unzip
	apt-get install -y jq
        apt-get install -y apache2

#java

#exnial
#        apt-get install openjdk-8-jdk -y
#trusty
        add-apt-repository ppa:openjdk-r/ppa
        apt-get update
        apt-get install -y openjdk-8-jdk    
        update-java-alternatives --list    

        wget http://www-eu.apache.org/dist/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz
        tar xzvf apache-maven-3.6.1-bin.tar.gz -C /usr/local/
        ln -s /usr/local/apache-maven-3.6.1/bin/mvn /usr/bin/mvn

#docker

        
        apt-get install -y docker.io
        
        usermod -aG docker vagrant

        newgrp docker
        
        docker run hello-world
        docker run -d -p 5000:5000 --restart=always --name registry registry:2
        service docker restart
        docker pull ubuntu:16.04
        docker tag ubuntu:16.04 localhost:5000/my-ubuntu
        docker push localhost:5000/my-ubuntu

        #docker run -d -p 5000:5000 --entrypoint htpasswd registry:2 -Bbn username password > auth/htpasswd

#k8s
        curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube
        install minikube /usr/local/bin
        minikube start
        #sudo minikube start --vm-driver=none
#certificates 
        sudo update-ca-certificates -f
        sudo apt-get install --reinstall ca-certificates-java

      
    SHELL

    config.vm.provision "file", source: "ufw", destination: "/home/vagrant/ufw"

    config.vm.provision "shell", inline: <<-SHELL
       #sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/g' /etc/ssh/sshd_config
       #sed -i 's/ChallengeResponseAuthentication yes/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
       
       cp /home/vagrant/ufw  /etc/default/ufw
       chown root:root /etc/default/ufw
       iptables -t filter --policy FORWARD ACCEPT
       echo "----------------------------------------------------"
       echo "| 1. Change vagrant passord.                       |"
       echo "| 2. Clone the m starter 2 repo and build as usual |"
       echo "----------------------------------------------------"
       echo "----------------------------------------------------"
       service ssh restart
    SHELL

end
